Write a program to implement Naïve Bayes algorithm in python and to display the results using confusion matrix and accuracy.
Aim: 
To implement the Naïve Bayes algorithm in Python and evaluate the model using a confusion matrix and accuracy.
Procedure for Naïve Bayes Algorithm:
•  Load the dataset and split it into training and testing sets.
•  Train the Naïve Bayes model using the training data.
•  Use the trained model to predict the class labels for the test data.
•  Generate a confusion matrix by comparing predicted and actual labels.
•  Calculate accuracy as the percentage of correctly predicted instances.
Code:
from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import GaussianNB
from sklearn.metrics import confusion_matrix, accuracy_score

# 1. Load dataset
iris = load_iris()
X = iris.data         # Features
y = iris.target       # Labels

# 2. Split into train and test sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

# 3. Train Naive Bayes model
model = GaussianNB()
model.fit(X_train, y_train)

# 4. Predict on test set
y_pred = model.predict(X_test)

# 5. Evaluate using confusion matrix and accuracy
cm = confusion_matrix(y_test, y_pred)
acc = accuracy_score(y_test, y_pred)

print("Confusion Matrix:")
print(cm)
print("Accuracy:", round(acc * 100, 2), "%")

Output:
Confusion Matrix:
[[16  0  0]
 [ 0 13  1]
 [ 0  1 14]]
Accuracy: 95.56 %

