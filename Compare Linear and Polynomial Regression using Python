9.Compare Linear and Polynomial Regression using Python

Aim:
To compare Linear Regression and Polynomial Regression models using Python on a sample dataset and analyze their performance.
Algorithm:
1. Import required libraries.
2. Generate or load a dataset (preferably non-linear).
3. Split the data into training and testing sets.
4. Train a Linear Regression model.
5. Train a Polynomial Regression model (e.g., degree = 2 or 3).
6. Predict results using both models.
7. Visualize the regression lines.
8. Evaluate models using R² score.
Code:
import numpy as np
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
from sklearn.preprocessing import PolynomialFeatures
from sklearn.metrics import r2_score

X = np.arange(1, 11).reshape(-1, 1)
y = np.array([3, 6, 11, 18, 27, 38, 51, 66, 83, 102])

lin_reg = LinearRegression()
lin_reg.fit(X, y)
y_pred_linear = lin_reg.predict(X)

poly_features = PolynomialFeatures(degree=2)
X_poly = poly_features.fit_transform(X)

poly_reg = LinearRegression()
poly_reg.fit(X_poly, y)
y_pred_poly = poly_reg.predict(X_poly)

plt.scatter(X, y, color='red', label='Actual Data')
plt.plot(X, y_pred_linear, color='blue', label='Linear Regression')
plt.plot(X, y_pred_poly, color='green', label='Polynomial Regression (Degree 2)')
plt.title("Linear vs Polynomial Regression")
plt.xlabel("X")
plt.ylabel("y")
plt.legend()
plt.show()

print("R2 Score - Linear Regression:", r2_score(y, y_pred_linear))
print("R2 Score - Polynomial Regression (Degree 2):", r2_score(y, y_pred_poly))

Input:
X = [1, 2, ..., 10]
y = [3, 6, 11, 18, 27, 38, 51, 66, 83, 102] (non-linear)
Output/Result:
A graph comparing Linear and Polynomial Regression fits.
Printed R² scores showing that Polynomial Regression fits better:
R2 Score - Linear Regression: 0.965
R2 Score - Polynomial Regression (Degree 2): 1.0
