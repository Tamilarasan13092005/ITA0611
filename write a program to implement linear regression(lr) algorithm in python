write a program to implement linear regression(lr) algorithm in python

Aim:
To implement the Linear Regression algorithm in Python and evaluate the model.
Procedure:
1.	Collect the dataset with input (independent) and output (dependent) variables.
2.	Split the dataset into training and testing sets.
3.	Train the linear regression model on the training data using the least squares method.
4.	Use the model to predict the output for test data.
5.	Evaluate the model using metrics like Mean Squared Error and RÂ² score, and plot the regression line.
Code:
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error, r2_score
# 1. Sample dataset (study hours vs scores)
X = [[1], [2], [3], [4], [5], [6]]
y = [15, 25, 35, 45, 55, 65]
# 2. Split data into training and test sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

# 3. Train Linear Regression model
model = LinearRegression()
model.fit(X_train, y_train)

# 4. Predict using the model
y_pred = model.predict(X_test)

# 5. Evaluate model
print("Predicted values:", y_pred)
print("Mean Squared Error:", mean_squared_error(y_test, y_pred))
print("R2 Score (Accuracy):", r2_score(y_test, y_pred))

# 6. Plot results
plt.scatter(X, y, color='blue', label='Actual')
plt.plot(X, model.predict(X), color='red', label='Regression Line')
plt.xlabel('Study Hours')
plt.ylabel('Scores')
plt.title('Linear Regression Example')
plt.legend()
plt.show()
Output:
Predicted values: [25. 35.]
Mean Squared Error: 0.0
R2 Score (Accuracy): 1.0
